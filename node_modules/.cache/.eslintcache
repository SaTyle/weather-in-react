[{"C:\\WEB_Speed\\Weather-Project\\WeatherApp-main\\src\\index.js":"1","C:\\WEB_Speed\\Weather-Project\\WeatherApp-main\\src\\reportWebVitals.js":"2","C:\\WEB_Speed\\Weather-Project\\WeatherApp-main\\src\\App.js":"3","C:\\WEB_Speed\\Weather-Project\\WeatherApp-main\\src\\components\\Card.js":"4"},{"size":535,"mtime":1690898593184,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1690898593892,"results":"7","hashOfConfig":"6"},{"size":152,"mtime":1690899051046,"results":"8","hashOfConfig":"6"},{"size":6423,"mtime":1690899357816,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ii91eg",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\WEB_Speed\\Weather-Project\\WeatherApp-main\\src\\index.js",[],[],"C:\\WEB_Speed\\Weather-Project\\WeatherApp-main\\src\\reportWebVitals.js",[],[],"C:\\WEB_Speed\\Weather-Project\\WeatherApp-main\\src\\App.js",[],[],"C:\\WEB_Speed\\Weather-Project\\WeatherApp-main\\src\\components\\Card.js",["23","24","25"],[],"\nimport '../css/card.css'\nimport sunset from '../assets/sunset.gif'\nimport sunrise from '../assets/sunrise.gif'\nimport hot from '../assets/hot.gif'\nimport cold from '../assets/cold.gif'\nimport cloudy from '../assets/cloudy.gif'\nimport humidity from '../assets/humidity.png'\nimport pressure from '../assets/pressure.png'\nimport wind from '../assets/wind.gif'\nimport axios from 'axios'\nimport moment from 'moment'\nimport React, { useState } from 'react'\n\nfunction Card() {\n    const [defaultCity, setDefaultCity] = useState('Pune');\n    const [timeGap, setTimeGap] = useState(\"\")\n    const [data, setData] = useState({\n        city: \"\",\n        temp: 0,\n        temp_max: 0,\n        temp_min: 0,\n        humidity: 0,\n        sunrise: 0,\n        sunset: 0,\n        country: \"\"\n    })\n    const getData = (city) => {\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=f876dfc52997ffe1b09fa00e6a5d55b2`)\n        // axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=FU`)\n        // FU = \"df46425ea4f4810380d663cb29f008dd\" \n\n            .then((response) => {\n                setData({\n                    desc: response.data.weather[0].main,\n                    icon: response.data.weather[0].icon,\n                    city: response.data.name,\n                    temp: response.data.main.temp,\n                    temp_max: response.data.main.temp_max,\n                    temp_min: response.data.main.temp_min,\n                    humidity: response.data.main.humidity,\n                    pressure: response.data.main.pressure,\n                    sunrise: response.data.sys.sunrise,\n                    sunset: response.data.sys.sunset,\n                    country: response.data.sys.country,\n                    windSpeed: response.data.wind.speed\n                })\n            })\n    }\n\n    const handleOnChange = (e) => {\n        clearTimeout(timeGap)\n        const timeout = setTimeout(() => {\n            getData(e.target.value)\n\n        }, 500)\n        setTimeGap(timeout)\n    }\n    // getData()\n    return (\n        <div>\n            <div className=\"area\" >\n                <ul className=\"circles\">\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                </ul>\n            </div >\n            <div className='container'>\n                <div className=\"card\">\n                    <div className=\"inputData\">\n                        <input\n                            type=\"text\"\n                            className='inputField'\n                            placeholder='Enter City Name'\n                            onChange={handleOnChange}\n                        />\n\n                        {/* <button className='btn' onClick={handleOnClick} type='submit'>Search</button> */}\n                    </div>\n\n                    <>\n                        <div className=\"city\">\n                            <h3><i className=\"fa-sharp fa-solid fa-location-dot\"></i> {data.city}  {data.country}</h3>\n                        </div>\n                        <div className=\"info\">\n                            <h2>{data.temp} °C</h2>\n                        </div>\n                        <div className=\"boxes\">\n                            <div className=\"box\"><h4>Max Temp</h4>\n                                <div className=\"border\">\n                                    <img src={hot} className=\"img\" alt=\"max_temp\" />\n                                </div>\n                                <h3>{data.temp_max} °C</h3></div>\n                            <div className=\"box\"><h4>Min Temp</h4>\n                                <div className=\"border\">\n                                    <img src={cold} className=\"img\" alt=\"min_temp\" />\n                                </div>\n                                <h3>{data.temp_min} °C</h3></div>\n                            <div className=\"box\"><h3>Wind Speed</h3>\n                                <div className=\"border\">\n                                    <img src={wind} className=\"img\" alt=\"sunrise\" />\n                                </div>\n                                <h3>{data.windSpeed}</h3></div>\n\n                            <div className=\"box\"><h3>Feels Like</h3>\n                                <div className=\"border\">\n                                    <img src={`https://openweathermap.org/img/wn/${data.icon}@2x.png`} className=\"icon-img\" alt=\"\" />\n                                    {/* <img src={cloudy} className=\"img\" alt=\"weather\" /> */}\n                                </div>\n                                <h3>{data.desc}</h3></div>\n                            <div className=\"box rise\"><h3>Sunrise</h3>\n                                <div className=\"border\">\n                                    <img src={sunrise} className=\"img\" alt=\"sunrise\" />\n                                </div>\n                                <h3>{moment(data.sunrise * 1000).format(\"hh:mm a\")}</h3></div>\n                            <div className=\"box\"><h3>Sunset</h3>\n                                <div className=\"border\">\n                                    <img src={sunset} className=\"img\" alt=\"sunset\" />\n                                </div>\n                                <h3>{moment(data.sunset * 1000).format(\"hh:mm a\")}</h3></div>\n                            <div className=\"box\"><h3>Pressure</h3>\n                                <div className=\"border\">\n                                    <img src={pressure} className=\"img\" alt=\"pressure\" />\n                                </div>\n                                <h3>{data.pressure}</h3></div>\n                            <div className=\"box\"><h3>Humidity</h3>\n                                <div className=\"border\">\n                                    <img src={humidity} className=\"img\" alt=\"humidity\" />\n                                </div>\n                                <h3>{data.humidity}</h3></div>\n                        </div>\n                    </>\n                    {/* )} */}\n                    <div className=\"Fter\">Copyright © 2003 AjeeT</div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Card\n",{"ruleId":"26","severity":1,"message":"27","line":7,"column":8,"nodeType":"28","messageId":"29","endLine":7,"endColumn":14},{"ruleId":"26","severity":1,"message":"30","line":16,"column":12,"nodeType":"28","messageId":"29","endLine":16,"endColumn":23},{"ruleId":"26","severity":1,"message":"31","line":16,"column":25,"nodeType":"28","messageId":"29","endLine":16,"endColumn":39},"no-unused-vars","'cloudy' is defined but never used.","Identifier","unusedVar","'defaultCity' is assigned a value but never used.","'setDefaultCity' is assigned a value but never used."]